package dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;

import org.apache.commons.dbcp2.BasicDataSource;

import dto.MembersDTO;

public class MembersDAO {
	private BasicDataSource basicDataSource;
	private String url = "jdbc:oracle:thin:@127.0.0.1:1521:xe";
	private String username = "";
	private String password = "";
	private int initialSize = 1;

	public MembersDAO() {
		this.basicDataSource = new BasicDataSource();
		this.basicDataSource.setUrl(this.url);
		this.basicDataSource.setUsername(this.username);
		this.basicDataSource.setPassword(this.password);
		this.basicDataSource.setInitialSize(this.initialSize);
	}

	public int insertCommons(MembersDTO dto) throws Exception {
		int result = 0;

		try(Connection conn = this.basicDataSource.getConnection();) {
			String sql = "INSERT INTO MEMBERS VALUES (?, ?, ?, ?, DEFAULT)";
			try(PreparedStatement pstat = conn.prepareStatement(sql);) {
				pstat.setString(1, dto.getId());
				pstat.setString(2, dto.getPw());
				pstat.setString(3, dto.getName());
				pstat.setString(4, dto.getContact());

				result = pstat.executeUpdate();

				conn.commit();
			}
		}
		return result;
	}

	/*
	public int updateCommons(CommonsDTO dto) throws Exception {
		int result = 0;

		try(Connection conn = this.basicDataSource.getConnection();) {
			String sql = "UPDATE [TABLE] SET [COL = VAL, ...] [WHERE [ ]]";
			try(PreparedStatement pstat = conn.prepareStatement(sql);) {
				//pstat.set

				result = pstat.executeUpdate();

				conn.commit();
			}
		}
		return result;
	}

	public int deleteCommons(CommonsDTO dto) throws Exception {
		int result = 0;

		try(Connection conn = this.basicDataSource.getConnection();) {
			String sql = "DELETE FROM [TABLE] [WHERE [ ]]";
			try(PreparedStatement pstat = conn.prepareStatement(sql);) {
				//pstat.set

				result = pstat.executeUpdate();

				conn.commit();
			}
		}
		return result;
	}

	public List<CommonsDTO> selectCommons(CommonsDTO dto) throws Exception {
		List<CommonsDTO> result = new ArrayList<CommonsDTO>();

		try(Connection conn = this.basicDataSource.getConnection();) {
			String sql = "SELECT [COLS] FROM [TABLE] [WHERE [ ]]";
			try(PreparedStatement pstat = conn.prepareStatement(sql);) {
				//pstat.set
				try(ResultSet rs = pstat.executeQuery();) {
					while(rs.next()) {
						//CommonsDTO dto = new CommonsDTO();
						//dto.set
						result.add(dto);
					}
				}
			}
		}
		return result;
	}
	 */

	public Boolean IsExistMember(MembersDTO dto) throws Exception {
		Boolean result = false;

		try(Connection conn = this.basicDataSource.getConnection();) {
			String sql = "SELECT * FROM MEMBERS WHERE ID = ?, PW = ?";
			try(PreparedStatement pstat = conn.prepareStatement(sql);) {
				pstat.setString(1, dto.getId());
				pstat.setString(2, dto.getPw());
				try(ResultSet rs = pstat.executeQuery();) {
					result = rs.next();
				}
			}
		}
		return result;
	}

}
